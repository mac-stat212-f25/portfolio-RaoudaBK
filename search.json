[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT212 Portfolio",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "src/pv/pv-01.html",
    "href": "src/pv/pv-01.html",
    "title": "Professional Viz Sample",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "Prof Viz",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Professional Viz Sample</span>"
    ]
  },
  {
    "objectID": "src/tt/2025-07-08.html",
    "href": "src/tt/2025-07-08.html",
    "title": "TidyTuesday Sample 1",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "TidyTuesday",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>TidyTuesday Sample 1</span>"
    ]
  },
  {
    "objectID": "src/tt/2025-07-15.html",
    "href": "src/tt/2025-07-15.html",
    "title": "TidyTuesday Sample 2",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "TidyTuesday",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>TidyTuesday Sample 2</span>"
    ]
  },
  {
    "objectID": "src/tt/hw01-tt.html",
    "href": "src/tt/hw01-tt.html",
    "title": "Homework 01",
    "section": "",
    "text": "TidyTuesday Section\nExplore the week’s TidyTuesday challenge. Develop a research question, then answer it through a short data story with effective visualization(s). Provide sufficient background for readers to grasp your narrative.",
    "crumbs": [
      "TidyTuesday",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Homework 01</span>"
    ]
  },
  {
    "objectID": "src/tt/hw01-tt.html#tidytuesday-section",
    "href": "src/tt/hw01-tt.html#tidytuesday-section",
    "title": "Homework 01",
    "section": "",
    "text": "Data context\nFor this homework I used the rank_by_year dataset from the Henley Passport Index, which measures how many countries a passport holder can enter without a visa. I chose this dataset because passports are mor than just travel documents. They reflect freedom and global mobility. Since I come from a country with a weaker passport, I was especially interested in exploring how access to visa-free travel differs across the world.\n\nCode# Load my librairies\nlibrary(readr) \nlibrary(tidyverse)\n\n\n\nCode#load my data\nrank_by_year  &lt;- read_csv(\"/Users/raouda/Documents/GitHub/portfolio-RaoudaBK/src/tt/Data/rank_by_year.csv\")\n\n\nResearch Question\nMy question today is : Which regions of the world have the most access to visa-free countries and how has this changed over time?\nI chose this focus because it allows me to compare regions instead of only looking at one country and helps to reveal inequalities between parts of the world showing where people can travel more freely.\nData Visualization\n\nCode# average number of visa-free destinations for each region from 2006 to 2025\nregion &lt;- rank_by_year %&gt;%\n  group_by(region, year) %&gt;%\n  summarise(avg_visa_free = mean(visa_free_count, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Illustrate the passport streng by region over the past 20 years\nggplot(region, aes(x = year, y = avg_visa_free, color = region)) +\n  geom_line() +\n  labs(\n    title = \"Average Visa-Free Access by Region (2006–2025)\",\n    x = \"Year\",\n    y = \"Average Number of Visa-Free Destinations\",\n    color = \"Region\") +\n  theme_minimal()\n\n\n\n\n\n\n\nData Analysis\nThe line chart shows that over the years, the number of visa-free destinations generally increases. From around 2010 to 2025, there is a clear upward trend, although some regions experience occasional fluctuations, with certain years showing increases for some countries and decreases for others. Interestingly, in the dataset I was given, the years 2007 and 2009 show 0 for all countries and regions. I’m not sure if this is because the data wasn’t collected or if there’s another reason, but it’s something I’d like to explore further.\nLooking at the overall trends, European countries consistently offer access to more than 150 destinations since 2017, making them the strongest passports. The Americas are generally in second place, followed by the Caribbean in third. However, by the end of 2022, it appears that Oceania’s passport mobility surpasses most Caribbean countries, and this continues until today. In contrast, African countries and the Middle East have much lower visa-free access, with Africa having fewer than 75 destinations even though there has been a slight increase compared to 2010.\nConclusion & reflections\nIn conclusion, the data shows that Europe has the strongest passport access, followed by the Americas, with the Caribbean and Oceania showing interesting shifts in mobility over time. Africa and the Middle East continue to have lower visa-free access, highlighting persistent global inequalities in travel freedom. I was somewhat surprised by Asia and that’s because while countries like Singapore and Japan have very strong passports, most Asian countries actually have relatively low mobility which I hadn’t expected. The Caribbean being third in mobility today also stood out to me, showing that smaller regions can sometimes have more freedom than larger ones.\nThe years 2007 and 2009 showing 0 for all regions is still unclear. This might be due to missing data or other factors—but it also makes me think about the importance of understanding data limitations when drawing conclusions.\nOverall, this homework helped me see how passport strength varies across regions and over time and it made me more aware of how travel freedom is not evenly distributed globally. In the future I would think about investigating the factors that influence changes in passport power over time, such as political relationships, trade agreements, or major events like the COVID-19 pandemic. It would also be interesting to look closer at the Caribbean and Oceania to understand why their mobility has increased relative to other regions.",
    "crumbs": [
      "TidyTuesday",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Homework 01</span>"
    ]
  },
  {
    "objectID": "src/ica/ica-sample1.html",
    "href": "src/ica/ica-sample1.html",
    "title": "ICA Sample 1",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ICA Sample 1</span>"
    ]
  },
  {
    "objectID": "src/ica/ica-sample2.html",
    "href": "src/ica/ica-sample2.html",
    "title": "ICA Sample 2",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ICA Sample 2</span>"
    ]
  },
  {
    "objectID": "src/ica/cleaning.html",
    "href": "src/ica/cleaning.html",
    "title": "Cleaning SFO Weather Data",
    "section": "",
    "text": "Exercise\nCarryout the following steps to clean and save the San Francisco Weather data. Make sure to download and add the data file to your portfolio repository as instructed.\nCodelibrary(tidyverse)\nCode my_data &lt;- read.csv(\"/Users/raouda/Documents/GitHub/portfolio-RaoudaBK/src/ica/weather.csv\")\nCodeclean_data &lt;- my_data |&gt;\n  mutate(PrecipYr = na_if(PrecipYr, 99999))\nCodeweather_clean &lt;- clean_data |&gt; \n    arrange(Month, Day) |&gt; \n    mutate(dateInYear = 1:365)\nCodeweather_clean |&gt; \n  mutate(month_name = month.abb[Month]) |&gt; \n  head()\n\n  Month Day Low High NormalLow NormalHigh RecordLow LowYr RecordHigh HiYear\n1     1   1  47   52        44         56        31  1965         68   1996\n2     1   2  48   51        44         56        29  1960         69   1996\n3     1   3  45   53        44         56        31  1950         69   2000\n4     1   4  39   53        44         56        29  1949         62   2006\n5     1   5  38   55        44         56        26  1949         65   1986\n6     1   6  37   52        44         56        29  1950         66   2003\n  Precip RecordPrecip PrecipYr   date Record RecordText RecordP CulmPrec\n1   0.09         2.16     2004 1/1/11  FALSE       &lt;NA&gt;   FALSE     0.09\n2   0.35         1.67     1977 1/2/11  FALSE       &lt;NA&gt;   FALSE     0.44\n3   0.00         1.33     1974 1/3/11  FALSE       &lt;NA&gt;   FALSE     0.44\n4   0.00         5.59     1982 1/4/11  FALSE       &lt;NA&gt;   FALSE     0.44\n5   0.00         1.98     1959 1/5/11  FALSE       &lt;NA&gt;   FALSE     0.44\n6   0.00         2.34     1993 1/6/11  FALSE       &lt;NA&gt;   FALSE     0.44\n  dateInYear month_name\n1          1        Jan\n2          2        Jan\n3          3        Jan\n4          4        Jan\n5          5        Jan\n6          6        Jan",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Cleaning SFO Weather Data</span>"
    ]
  },
  {
    "objectID": "src/ica/cleaning.html#exercise",
    "href": "src/ica/cleaning.html#exercise",
    "title": "Cleaning SFO Weather Data",
    "section": "",
    "text": "Read in the weather data in this file with the correct relative file path after you move it to the instructed location.\nThere is a variable that has values that don’t make sense in the data context. Figure out which variable this is and clean it up by making those values missing using na_if().\nCreate a variable called dateInYear that indicates the day of the year (1-365) for each case. (Jan 1 should be 1, and Dec 31 should be 365).\nCreate a variable called month_name that shows the 3-letter abbreviation for each case.\nSave the wrangled data to the data/processed/ folder using write_csv(). Name this file weather_clean.csv. Look up the documentation for this function by typing ?write_csv in the Console. You’ll need to write an appropriate relative path.",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Cleaning SFO Weather Data</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html",
    "href": "src/ica/ICA-3.html",
    "title": "3 Advanced Data Viz",
    "section": "",
    "text": "🧩 Learning Goals\nBy the end of this lesson, you should be able to:",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#learning-goals",
    "href": "src/ica/ICA-3.html#learning-goals",
    "title": "3 Advanced Data Viz",
    "section": "",
    "text": "Navigate ggplot2 reference page to find needed functions for a desired visualization\nNavigate the different sections of a function help page to construct desired plot features, in particular,\n\nNavigate the Usage section to identify arguments that must be set\nNavigate the Arguments section to understand how arguments work\nNavigate the Aesthetics section to learn how plot appearance can be controlled\nNavigate the Examples section for some usage examples\n\n\nIdentify when to use different data arguments within ggplot() and geom_() layers",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#introduction",
    "href": "src/ica/ICA-3.html#introduction",
    "title": "3 Advanced Data Viz",
    "section": "Introduction 1\n",
    "text": "Introduction 1\n\nIn this lesson, we are going to recreate NYTimes 2015 Temperature Visualization (html) using data from San Francisco (SFO) in 2011.\n\n\nScreenshot of NYTimes 2015 Temperature Visualization",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#reading-data",
    "href": "src/ica/ICA-3.html#reading-data",
    "title": "3 Advanced Data Viz",
    "section": "Reading Data",
    "text": "Reading Data\nRun the code chunk below to load the tidyverse package and read in the San Francisco weather data.\n\nCodelibrary(tidyverse)\nweather &lt;- read_csv(\"https://mac-stat.github.io/data/sfo_weather.csv\")",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#understanding-data",
    "href": "src/ica/ICA-3.html#understanding-data",
    "title": "3 Advanced Data Viz",
    "section": "Understanding Data",
    "text": "Understanding Data\nBelow is the codebook of the data. Familiarize yourself with the meaning of each variable. Use the codebook as a reference when using the data.\n\n\nMonth: Month of the year (1-12)\n\nDay: Day within the month (1-31)\n\nLow/High: Low/high temperature this day\n\nNormalLow/NormalHigh: Typical low/high temperature for this day of the year\n\nRecordLow/RecordHigh: Record low/high temperature for this day of the year\n\nLowYr/HighYr: Year in which the record low/high was observed\n\nPrecip: Amount of precipitation (inches) this day\n\nRecordPrecip: Record amount of precipitation for this day of the year\n\nPrecipYr: Year in which the record precipitation was observed\n\ndate: The actual date in 2011 for this day in YYYY-MM-DD format\n\ndateInYear: What day of the year is it? (1-365)\n\nRecord: Logical (TRUE/FALSE) indicating whether this day had a high temperature record\n\nRecordText: Text that displays the record high for this day (\"Record high: ##\")\n\nRecordP: Logical (TRUE/FALSE) indicating whether this day had a precipitation record\n\nCulmPrec: Cumulative precipitation for the month up to this day",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-1",
    "href": "src/ica/ICA-3.html#exercise-1",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 1",
    "text": "Exercise 1\nExamine the NYTimes 2015 Temperature Visualization (html) then answer the following questions.\nData Storytelling\nThe NYTimes intro says that 2015 was the hottest year on record. The key message is that the climate is getting warmer, and the data shows this. The visualization lets the reader compare each day’s temperature with the “normal” and with past records. By doing this, the graph makes the claim more clear, because we can see how often 2015 went above normal or reached records.\nAesthetic Mapping The visualization uses: - Low and High for daily real temperatures, - NormalLow and NormalHigh for the usual range, - RecordLow and RecordHigh for the records, - dateInYear for the x-axis position.\nThese map to aesthetics like this: - x = dateInYear for the position of each day, - ymin and ymax for the lines (low to high), - color to show if it is record, normal, or observed, - line thickness to separate importance (record is light, observed is darker).",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-2",
    "href": "src/ica/ICA-3.html#exercise-2",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 2",
    "text": "Exercise 2\nNavigate the Geoms section of the ggplot2 reference page to find a geom that corresponds to the visual elements in the temperature plot. Using both the small thumbnail visuals on the right and the names of the geom’s, brainstorm some possibilities for geom’s you might use to recreate the temperature visualization.\nLooking at the ggplot reference, the geoms that can help are: - geom_linerange() which is good for showing the interval between low and high, - geom_ribbon() or geom_rect() which is good for shading an area, - geom_point() for special values like record days, - geom_vline() for drawing vertical lines like the separation between months.\n\n\n\n\n\n\nNavigating Documentation / Reference Pages\n\n\n\nYou need to navigate the geoms further by opening up their reference pages to understand if a particular geom is suitable for our task. Let’s look at the geom_point documentation page to learn how to read a documentation page..\nThe Usage section shows all of the possible inputs (arguments) to the geom. These are all of the ways that a geom can be customized. Just looking at the argument names can help give a hint as to what arguments might fit our needs.\nThe Arguments section, on the other hand, explains in detail what each argument does and the possible values the argument can take. The mapping, data, and ... arguments will be the most commonly used by far.\n\n\nmapping is the argument that is being used when we specify which variables should link or map to the plot aesthetics (the code inside aes()).\n\ndata is the argument where we specify the dataset containing the variables that the geom is using.\n\n... is used for fixed aesthetics (ones that don’t correspond to a variable), eg, to set the color of all points, we use color = \"red\" and to set the size of all points, we use size = 3.\n\nThe Aesthetics section of a geom documentation page gives information on how the visual elements of the geom correspond to data. For example, the geom_point documentation page shows that x and y aesthetics are available. It also shows some new aesthetics like stroke.\n\n\n\n\n\n\n\n\ndata Argument\n\n\n\nPreviously you have used one dataset per plot by specifying that as the first argument of ggplot(). However, multiple data sets can be passed into ggplot as shown in the example below.\n\nCodedata(diamonds)\n\ndiamonds_avg_price &lt;- diamonds |&gt;\n  group_by(carat) |&gt;\n  summarize(avg_price = mean(price)) |&gt;\n  arrange(carat)\ndiamonds_avg_price &lt;- diamonds_avg_price[seq(1, nrow(diamonds_avg_price), 3), ]\n\nggplot(diamonds, aes(x = carat, y = price)) +\n  geom_point() +\n  geom_point(\n    data = diamonds_avg_price,\n    aes(x = carat, y = avg_price),\n    color = \"deepskyblue\",\n    size = 3\n  )\n\n\n\n\n\n\n\n\n\nLook at the geom_linerange documentation page and start off your temperature visualization with the record lows and highs. Your plot should look like the one below. The hex code of the used light tan color is #ECEBE3.\n\n\nSFO Weather Records in 2011\n\n\nCodeggplot(weather) +\n    theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeyboard Shortcuts\n\n\n\nAs you work on this plot, try to use some new keyboard shortcuts. Focus on the following:\n\nInsert code chunk: Ctrl+Alt+I (Windows). Option+Command+I (Mac).\nRun current code chunk: Ctrl+Shift+Enter (Windows). Command+Shift+Return (Mac).\nRun current line/currently selected lines: Ctrl+Enter (Windows). Command+Return (Mac).\n\n\n\n\nCodeggplot(weather) +\n  geom_linerange(aes(x = dateInYear, ymin = RecordLow, ymax = RecordHigh),\n                 color = \"#ECEBE3\") +\n  theme_classic()",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-3",
    "href": "src/ica/ICA-3.html#exercise-3",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 3",
    "text": "Exercise 3\nIn your visualization, also display the usual temperatures (NormalLow and NormalHigh) and actual 2011 temperatures (Low and High). Your plot should look like the one below. The hex code of the color used for the usual temperatures is \"#C8B8BA\" and for the color used for actual temperatures is \"#A90248\".\n\n\nSFO observed, Average, and Record Daily Temperatures in 2011\n\n\nCodeggplot(weather) +\n  # Record \n  geom_linerange(aes(x = dateInYear, ymin = RecordLow, ymax = RecordHigh),\n                 color = \"#ECEBE3\") +\n  # Normal \n  geom_linerange(aes(x = dateInYear, ymin = NormalLow, ymax = NormalHigh),\n                 color = \"#C8B8BA\") +\n  # Observed 2011 temps\n  geom_linerange(aes(x = dateInYear, ymin = Low, ymax = High),\n                 color = \"#A90248\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiner Control\n\n\n\nIf you’d like finer control of the width of these lines/rectangles, check out the geom_rect documentation page.",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-4",
    "href": "src/ica/ICA-3.html#exercise-4",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 4",
    "text": "Exercise 4\nRecreate the visual demarcations of the months by adding vertical lines separating the months. Brainstorm how we might draw those vertical lines. What geom might we use? What subset of the data might we use in that geom layer to draw lines only at the month divisions?\n\nCodemonth_lines &lt;- weather %&gt;%\n  group_by(Month) %&gt;%\n  summarize(first_day = min(dateInYear))\n\nggplot(weather) +\n  geom_linerange(aes(x = dateInYear, ymin = RecordLow, ymax = RecordHigh),\n                 color = \"#ECEBE3\") +\n  geom_linerange(aes(x = dateInYear, ymin = NormalLow, ymax = NormalHigh),\n                 color = \"#C8B8BA\") +\n  geom_linerange(aes(x = dateInYear, ymin = Low, ymax = High),\n                 color = \"#A90248\") +\n  geom_vline(data = month_lines, aes(xintercept = first_day),\n             color = \"grey40\", linetype = \"dashed\") +\n  theme_classic()",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-5",
    "href": "src/ica/ICA-3.html#exercise-5",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 5",
    "text": "Exercise 5\nChange the x-axis labels so that the month names display in the center of each month’s slice of the plot.\n\n\n\n\n\n\nMonth Names\n\n\n\nR has built-in variables called month.abb and month.name that contain abbreviated and full month names.\n\n\nTry to figuring out this new challenge using search engines and LLMs:\n\nSearch Engines. Use Google to search for possible solutions using the jargon that is most likely to return the most relevant results. Record search queries and your thought process in selecting which search results to look at first.\nLLMs. Use ChatGPT or Gemini with prompts that will most efficiently get you the desired results. Record the chat prompts used and output given. Evaluate the output. Do you fully understand the code generated? How can you tell that the generated code is correct?\n\n\nCodeggplot(weather) +\n  geom_linerange(aes(x = dateInYear, ymin = RecordLow, ymax = RecordHigh),\n                 color = \"#ECEBE3\") +\n  geom_linerange(aes(x = dateInYear, ymin = NormalLow, ymax = NormalHigh),\n                 color = \"#C8B8BA\") +\n  geom_linerange(aes(x = dateInYear, ymin = Low, ymax = High),\n                 color = \"#A90248\") +\n  scale_x_continuous(\n    breaks = c(15, 45, 75, 105, 135, 165, 195, 225, 255, 285, 315, 345),\n    labels = month.abb\n  ) +\n  theme_classic()",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#exercise-6",
    "href": "src/ica/ICA-3.html#exercise-6",
    "title": "3 Advanced Data Viz",
    "section": "Exercise 6",
    "text": "Exercise 6\nCreate a precipitation plot that looks like the following. Note that\n\nThe triangles point to precipitation records–refer to the data codebook above for the RecordP variable.\nThe numbers on the plot indicate the total precipitation for the month–search the hjust and vjust options to adjust the alignment of the numbers.\nThe blue and tan colors hex codes are \"#32a3d8\" and \"#ebeae2\", respectively.\n\n\n\nSFO Precipitation in 2011\n\n\nCodeggplot(weather, aes(x = dateInYear, y = Precip)) +\n  geom_col(fill = \"#ebeae2\") +\n  geom_point(data = filter(weather, RecordP == TRUE),\n             aes(x = dateInYear, y = Precip),\n             shape = 17, color = \"blue\", size = 3) +\n  geom_text(data = weather %&gt;%\n              group_by(Month) %&gt;%\n              summarize(total = sum(Precip),\n                        mid = mean(dateInYear)),\n            aes(x = mid, y = total + 0.2, label = total),\n            vjust = 0, hjust = 0.5) +\n  theme_classic()",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#done",
    "href": "src/ica/ICA-3.html#done",
    "title": "3 Advanced Data Viz",
    "section": "Done!",
    "text": "Done!\n\nCheck the ICA Instructions for how to (a) push your code to GitHub and (b) update your portfolio website",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/ica/ICA-3.html#footnotes",
    "href": "src/ica/ICA-3.html#footnotes",
    "title": "3 Advanced Data Viz",
    "section": "",
    "text": "The exercise in this lesson are inspired by an assignment from the Concepts in Computing with Data course at UC Berkeley taught by Dr. Deborah Nolan.↩︎",
    "crumbs": [
      "In-Class Activities",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>3 Advanced Data Viz</span>"
    ]
  },
  {
    "objectID": "src/appx/appx-sample1.html",
    "href": "src/appx/appx-sample1.html",
    "title": "Appendix A — Appendix Sample 1",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Appendix Sample 1</span>"
    ]
  },
  {
    "objectID": "src/appx/appx-sample2.html",
    "href": "src/appx/appx-sample2.html",
    "title": "Appendix B — Appendix Sample 2",
    "section": "",
    "text": "Add content here",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Appendix Sample 2</span>"
    ]
  },
  {
    "objectID": "mm/mm.html",
    "href": "mm/mm.html",
    "title": "Appendix C — Mind Maps",
    "section": "",
    "text": "Creativity",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Mind Maps</span>"
    ]
  },
  {
    "objectID": "mm/mm.html#creativity",
    "href": "mm/mm.html#creativity",
    "title": "Appendix C — Mind Maps",
    "section": "",
    "text": "0808-mind_map_example.jpg",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Mind Maps</span>"
    ]
  }
]